{"version":3,"sources":["SortingAlgorithms/MergeSort.js","SortingAlgorithms/QuickSort.js","SortingAlgorithms/SelectionSort.js","SortingAlgorithms/BubbleSort.js","components/InputSlider.js","components/AppBar.js","components/snackbar.js","SortingVisualizer/SortingVisualizer.js","SortingAlgorithms/InsertionSort.js","components/Loader.js","App.js","index.js"],"names":["getMergeSortAnimations","array","animations","auxillaryArray","slice","mergeSort","startIndex","endIndex","middleIndex","Math","floor","sortArray","i","j","push","length","merge","javaScriptSortedArray","sort","a","b","console","log","firstArray","secondArray","arraysAreEqual","getQuickSortAnimations","quickSort","pivotIndex","pivot","swap","partitionArray","firstIndex","secondIndex","temp","getSelectionSortAnimations","N","minIndex","selectionSort","getBubbleSortAnimations","bubbleSort","useStyles","makeStyles","theme","root","width","margin","height","spacing","valuetext","value","DiscreteSlider","sliderValue","maxValue","isSliderDisabled","setSliderValue","step","min","classes","onChange","React","useState","setValue","className","Slider","max","defaultValue","getAriaValueText","aria-labelledby","valueLabelDisplay","disabled","event","newValue","flexGrow","menuButton","marginRight","title","ButtonAppBar","InsertionSort","setReinitialize","notify","SET_ANIMATION_SPEED_MS","isDisabled","setIsDisabled","onClickHandler","e","currentTarget","AppBar","position","Toolbar","IconButton","edge","color","Typography","variant","Button","onClick","SimpleSnackbar","stateVal","v","h","msg","duration","open","setOpen","handleClose","reason","useEffect","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","message","action","Fragment","size","container","padding","maxHeight","minHeight","overflow","mycontainer","paddingLeft","paddingRight","marginLeft","mySlider","marginTop","float","WINDOW_WIDTH","window","innerWidth","WINDOW_HEIGHT","innerHeight","NUMBER_OF_ARRAY_BARS","parseInt","onresize","randomIntFromInterval","random","SortingVisualizer","props","setMsg","ANIMATION_SPEED_MS","buttonText","setButtonText","reinitialize","barArray","setBarArray","barWidth","setBarWidth","isSorted","setSize","useLayoutEffect","updateSize","addEventListener","removeEventListener","useWindowSize","resetArray","arr","reinitializeEverything","location","reload","Fade","in","timeout","Container","maxWidth","backgroundColor","type","store","addNotification","insert","animationIn","animationOut","dismiss","onScreen","isColorChange","arrayBars","document","getElementsByClassName","barOneIndex","barTwoIndex","barOneStyle","style","barTwoStyle","setTimeout","barIndex","newHeight","barStyle","RESTORE_TIME","key","insertionSort","getInsertionSortAnimations","barOneIdx","map","idx","Box","display","p","alignContent","marginBottom","id","gutterBottom","CircularProgressWithLabel","CircularProgress","top","left","bottom","right","alignItems","justifyContent","component","round","CircularStatic","initial","progress","setProgress","timer","setInterval","prevProgress","setLoader","clearInterval","Grid","direction","justify","App","loader","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.42a99743.chunk.js","sourcesContent":["export function getMergeSortAnimations(array) {\n    let animations  = [];\n    let auxillaryArray = array.slice();\n    mergeSort(auxillaryArray, 0, auxillaryArray.length - 1, animations);\n    const javaScriptSortedArray = array.slice().sort((a, b) => a - b);\n    console.log(arraysAreEqual(javaScriptSortedArray, auxillaryArray));\n    array = auxillaryArray;\n    return [animations, array];\n}\n\nfunction mergeSort(auxillaryArray, startIndex, endIndex, animations) {\n    if(startIndex === endIndex)\n        return;\n    const middleIndex = Math.floor((startIndex + endIndex)/2);\n    mergeSort(auxillaryArray, startIndex, middleIndex, animations);\n    mergeSort(auxillaryArray, middleIndex + 1, endIndex, animations);\n    merge(auxillaryArray, startIndex, middleIndex, endIndex, animations);\n}\n\nfunction merge(auxillaryArray, startIndex, middleIndex, endIndex, animations) {\n    let sortArray = [];\n    let i = startIndex;\n    let j = middleIndex + 1;\n    while(i <= middleIndex && j <= endIndex) {\n        //Comparing value at ith and jth index so push them to change their color\n        animations.push([i, j]);\n        //By changing color we imply that we are comparing those two values and then again we should revert back to their original color so push them again\n        animations.push([i, j]);\n        if(auxillaryArray[i] <= auxillaryArray[j]) {\n            //We should overwrite the value at (i+startIndex)th index with ith index so push them to highlight swap their heights\n            animations.push([sortArray.length + startIndex, auxillaryArray[i]]);\n            sortArray.push(auxillaryArray[i++]);\n        }\n        else {\n            //We should overwrite the value at (i+startIndex)th index with jth index so push them to highlight swap their heights\n            animations.push([sortArray.length + startIndex, auxillaryArray[j]]);\n            sortArray.push(auxillaryArray[j++]);\n        }\n    }\n    while(i <= middleIndex) {\n        animations.push([i, i]);\n        animations.push([i, i]);\n        animations.push([sortArray.length + startIndex, auxillaryArray[i]]);\n        sortArray.push(auxillaryArray[i++]);\n    }\n    while(j <= endIndex) {\n        animations.push([j, j]);\n        animations.push([j, j]);\n        animations.push([sortArray.length + startIndex, auxillaryArray[j]]);\n        sortArray.push(auxillaryArray[j++]);\n    }\n    for (let i = startIndex; i <= endIndex; i++) {\n        auxillaryArray[i] = sortArray[i - startIndex];\n    }\n}\n\nfunction arraysAreEqual(firstArray, secondArray) {\n    if (firstArray.length !== secondArray.length) {\n        return false;\n    }\n    for (let i = 0; i < firstArray.length; i++) {\n      if (firstArray[i] !== secondArray[i]) {\n        return false;\n      }\n    }\n    return true;\n}","export function getQuickSortAnimations(array) {\n    let animations  = [];\n    let auxillaryArray = array.slice();\n    quickSort(auxillaryArray, 0, auxillaryArray.length - 1, animations);\n    const javaScriptSortedArray = array.slice().sort((a, b) => a - b);\n    console.log(\"sort works correctly? \",arraysAreEqual(javaScriptSortedArray, auxillaryArray));\n    array = auxillaryArray;\n    return [animations, array];\n}\n\ngetQuickSortAnimations([7,2,1,6]);\n\nfunction quickSort(auxillaryArray, startIndex, endIndex, animations) {\n    let pivotIndex;\n    if (startIndex < endIndex) {\n        pivotIndex = partitionArray(auxillaryArray, startIndex, endIndex, animations);\n        quickSort(auxillaryArray, startIndex, pivotIndex - 1, animations);\n        quickSort(auxillaryArray, pivotIndex + 1, endIndex, animations);\n    }\n}\n\nfunction partitionArray(auxillaryArray, startIndex, endIndex, animations) {\n    let pivot = auxillaryArray[endIndex];\n    let pivotIndex = startIndex;\n    for (let i = startIndex; i <= endIndex - 1; i++) {\n        animations.push([i, endIndex]);\n        animations.push([i, endIndex]);\n        if (auxillaryArray[i] <= pivot) {\n            //Swap these two heights\n            animations.push([i, auxillaryArray[pivotIndex]]);\n            animations.push([pivotIndex, auxillaryArray[i]]);\n            swap(auxillaryArray, i , pivotIndex);\n            pivotIndex++;\n        }\n        else {\n            animations.push([-1, -1]);\n            animations.push([-1, -1]);\n        }\n        animations.push([-1, -1]);\n        animations.push([-1, -1]);\n    }\n    animations.push([-1, -1]);\n    animations.push([-1, -1]);\n    animations.push([-1, -1]);\n    animations.push([-1, -1]);\n    //Swap these two heights\n    animations.push([pivotIndex, auxillaryArray[endIndex]]);\n    animations.push([endIndex, auxillaryArray[pivotIndex]]);\n    swap(auxillaryArray, pivotIndex, endIndex);\n    return pivotIndex;\n}\n\nfunction swap(auxillaryArray, firstIndex, secondIndex) {\n    let temp = auxillaryArray[firstIndex];\n    auxillaryArray[firstIndex] = auxillaryArray[secondIndex];\n    auxillaryArray[secondIndex] = temp;\n}\n\nfunction arraysAreEqual(firstArray, secondArray) {\n    if (firstArray.length !== secondArray.length) {\n        return false;\n    }\n    for (let i = 0; i < firstArray.length; i++) {\n      if (firstArray[i] !== secondArray[i]) {\n        return false;\n      }\n    }\n    return true;\n}","export function getSelectionSortAnimations(array) {\n    let animations  = [];\n    let auxillaryArray = array.slice();\n    selectionSort(auxillaryArray, animations);\n    const javaScriptSortedArray = array.slice().sort((a, b) => a - b);\n    console.log(\"sort works correctly? \",arraysAreEqual(javaScriptSortedArray, auxillaryArray));\n    array = auxillaryArray;\n    return [animations, array];\n}\n\nfunction selectionSort(auxillaryArray, animations) {\n    const N = auxillaryArray.length;\n    for (let i = 0; i < N - 1; i++) {\n        let minIndex = i; //Finding minimum element in unsorted array\n        for (let j = i + 1; j < N; j++) {\n            animations.push([\"comparision1\", j, minIndex]);\n            animations.push([\"comparision2\", j, minIndex]);\n            if (auxillaryArray[j] < auxillaryArray[minIndex]) {\n                minIndex = j;\n            }\n        }\n        animations.push([\"swap\", minIndex, auxillaryArray[i]]);\n        animations.push([\"swap\", i, auxillaryArray[minIndex]]);\n        // Swap the found minimum element with the first element\n        swap(auxillaryArray, minIndex, i);\n    }\n}\n\nfunction swap(auxillaryArray, firstIndex, secondIndex) {\n    let temp = auxillaryArray[firstIndex];\n    auxillaryArray[firstIndex] = auxillaryArray[secondIndex];\n    auxillaryArray[secondIndex] = temp;\n}\n\nfunction arraysAreEqual(firstArray, secondArray) {\n    if (firstArray.length !== secondArray.length) {\n        return false;\n    }\n    for (let i = 0; i < firstArray.length; i++) {\n      if (firstArray[i] !== secondArray[i]) {\n        return false;\n      }\n    }\n    return true;\n}","export function getBubbleSortAnimations(array) {\n    let animations  = [];\n    let auxillaryArray = array.slice();\n    bubbleSort(auxillaryArray, animations);\n    const javaScriptSortedArray = array.slice().sort((a, b) => a - b);\n    console.log(\"sort works correctly? \",arraysAreEqual(javaScriptSortedArray, auxillaryArray));\n    array = auxillaryArray;\n    return [animations, array];\n}\n\nfunction bubbleSort(auxillaryArray, animations) {\n    const N = auxillaryArray.length;\n    for (let i = 0; i < N - 1; i++) {\n        for (let j = 0; j < N - i -1; j++) {\n            animations.push([j, j + 1]);\n            animations.push([j, j + 1]);\n            if (auxillaryArray[j] > auxillaryArray[j + 1]) {\n                animations.push([j, auxillaryArray[j + 1]]);\n                animations.push([j + 1, auxillaryArray[j]]);\n                swap(auxillaryArray, j, j + 1);\n            }\n            else {\n                animations.push([-1, -1]);\n                animations.push([-1, -1]);\n            }\n        }\n    }\n}\n\nfunction swap(auxillaryArray, firstIndex, secondIndex) {\n    let temp = auxillaryArray[firstIndex];\n    auxillaryArray[firstIndex] = auxillaryArray[secondIndex];\n    auxillaryArray[secondIndex] = temp;\n}\n\nfunction arraysAreEqual(firstArray, secondArray) {\n    if (firstArray.length !== secondArray.length) {\n        return false;\n    }\n    for (let i = 0; i < firstArray.length; i++) {\n      if (firstArray[i] !== secondArray[i]) {\n        return false;\n      }\n    }\n    return true;\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\n\nconst useStyles = makeStyles((theme) => ({\n\troot   : {\n\t\twidth : 300\n\t},\n\tmargin : {\n\t\theight : theme.spacing(3)\n\t}\n}));\n\nfunction valuetext (value) {\n\treturn `${value}`;\n}\n\n\n\nexport default function DiscreteSlider ({ sliderValue, maxValue=10, isSliderDisabled, setSliderValue, step=1, min=1, onChange=null }) {\n\tconst classes = useStyles();\n\tconst [value, setValue] = React.useState((maxValue / 10) >> 0);\n\n\tconst onChangeHandler = (event, newValue) => {\n\t\tsetValue(newValue);\n\t\tsetSliderValue(value);\n\t\t//console.log(value, newValue);\n\t\t//setSliderValue(newValue)\n\t\n\t}\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<Slider\n\t\t\t\tvalue={sliderValue}\n\t\t\t\tmin={min}\n\t\t\t\tmax={maxValue}\n\t\t\t\tdefaultValue={sliderValue}\n\t\t\t\tgetAriaValueText={valuetext}\n\t\t\t\taria-labelledby=\"discrete-slider-always\"\n\t\t\t\tstep={step}\n\t\t\t\tvalueLabelDisplay=\"on\"\n\t\t\t\tdisabled={isSliderDisabled}\n\t\t\t\tonChange={onChangeHandler}\n\t\t\t/>\n\t\t</div>\n\t);\n}\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { ButtonGroup } from '@material-ui/core';\nimport Container from '@material-ui/core/Container';\nimport LocalFloristTwoToneIcon from '@material-ui/icons/LocalFloristTwoTone';\nimport styled from 'styled-components';\n\nconst useStyles = makeStyles((theme) => ({\n\troot       : {\n\t\tflexGrow : 1\n\t},\n\tmenuButton : {\n\t\tmarginRight : theme.spacing(2)\n\t},\n\ttitle      : {\n\t\tflexGrow : 1\n\t}\n}));\n\nexport default function ButtonAppBar ({\n\tbubbleSort,\n\tselectionSort,\n\tInsertionSort,\n\tmergeSort,\n\tquickSort,\n\tsetReinitialize,\n\tnotify,\n\tSET_ANIMATION_SPEED_MS\n}) {\n\tconst classes = useStyles();\n\tconst [ isDisabled, setIsDisabled ] = useState(false);\n\n\t// const onClick1 = () => {\n\t// \tbubbleSort();\n\t// \tsetIsDisabled(true);\n\t// \tsetReinitialize(true);\n\t// };\n\n\tconst onClickHandler = (e) => {\n\t\tswitch (e.currentTarget.value) {\n\t\t\tcase 'bubbleSort':\n\t\t\t\tbubbleSort();\n\n\t\t\t\tbreak;\n\t\t\tcase 'selectionSort':\n\t\t\t\tselectionSort();\n\t\t\t\tbreak;\n\t\t\tcase 'InsertionSort':\n\t\t\t\tInsertionSort();\n\t\t\t\tbreak;\n\t\t\tcase 'mergeSort':\n\t\t\t\tmergeSort();\n\t\t\t\tbreak;\n\t\t\tcase 'quickSort':\n\t\t\t\tquickSort();\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t\t\n\n\t\tsetIsDisabled(true);\n\t\tsetReinitialize(true);\n\t};\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<AppBar position=\"static\">\n\t\t\t\t<Toolbar>\n\t\t\t\t\t<IconButton edge=\"start\" color=\"inherit\">\n\t\t\t\t\t\t<LocalFloristTwoToneIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t\t<Typography variant=\"h6\" className={classes.title}>\n\t\t\t\t\t\tAlgorithm Visualizer\n\t\t\t\t\t</Typography>\n\n\t\t\t\t\t<textContainer>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\t\tvalue=\"bubbleSort\"\n\t\t\t\t\t\t\tonClick={(e) => onClickHandler(e, 'value')}\n\t\t\t\t\t\t\tdisabled={isDisabled}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tBubble Sort\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\t\tvalue=\"selectionSort\"\n\t\t\t\t\t\t\tonClick={(e) => onClickHandler(e, 'value')}\n\t\t\t\t\t\t\tdisabled={isDisabled}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tSelection Sort\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\t\tvalue=\"InsertionSort\"\n\t\t\t\t\t\t\tonClick={(e) => onClickHandler(e, 'value')}\n\t\t\t\t\t\t\tdisabled={isDisabled}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tInsertion Sort\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\t\tvalue=\"mergeSort\"\n\t\t\t\t\t\t\tonClick={(e) => onClickHandler(e, 'value')}\n\t\t\t\t\t\t\tdisabled={isDisabled}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tMerge Sort\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\t\tvalue=\"quickSort\"\n\t\t\t\t\t\t\tonClick={(e) => onClickHandler(e, 'value')}\n\t\t\t\t\t\t\tdisabled={isDisabled}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tQuick Sort\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</textContainer>\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t</div>\n\t);\n}\n","import React, { useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\nexport default function SimpleSnackbar ({ stateVal, v = 'top', h = 'center', msg = 'LOADING...', duration='6000' }) {\n\tconst [ open, setOpen ] = React.useState(stateVal);\n\n\tconst handleClick = () => {\n\t\tsetOpen(true);\n\t};\n\n\tconst handleClose = (event, reason) => {\n\t\n\t\tsetOpen(false);\n\t};\n\n\tuseEffect(\n\t\t() => {\n\t\t\tsetOpen((open) => !open);\n\t\t},\n\t\t[ stateVal ]\n\t);\n\n\treturn (\n\t\t<div>\n\t\t\t<Button onClick={handleClick} />\n\t\t\t<Snackbar\n\t\t\t\tanchorOrigin={{\n\t\t\t\t\tvertical   : v,\n\t\t\t\t\thorizontal : h\n\t\t\t\t}}\n\t\t\t\topen={open}\n\t\t\t\tautoHideDuration={duration}\n\t\t\t\tonClose={handleClose}\n\t\t\t\tmessage={msg}\n\t\t\t\taction={\n\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t<Button color=\"secondary\" size=\"small\" onClick={handleClose}>\n\t\t\t\t\t\t\tOK\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t}\n\t\t\t/>\n\t\t</div>\n\t);\n}\n","import React, { Fragment, useState, useEffect, useLayoutEffect } from 'react';\nimport './SortingVisualizer.css';\nimport { getMergeSortAnimations } from '../SortingAlgorithms/MergeSort';\nimport { getQuickSortAnimations } from '../SortingAlgorithms/QuickSort';\nimport { getInsertionSortAnimations } from '../SortingAlgorithms/InsertionSort';\nimport { getSelectionSortAnimations } from '../SortingAlgorithms/SelectionSort';\nimport { getBubbleSortAnimations } from '../SortingAlgorithms/BubbleSort';\nimport Container from '@material-ui/core/Container';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport InputSlider from '../components/InputSlider';\nimport 'react-notifications-component/dist/theme.css';\nimport { Button, makeStyles, Fade } from '@material-ui/core';\nimport ButtonAppBar from '../components/AppBar';\n\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport { store } from 'react-notifications-component';\nimport SimpleSnackbar from '../components/snackbar';\n\nconst useStyles = makeStyles((theme) => ({\n\troot        : {\n\t\tflexGrow : 1\n\t},\n\tcontainer   : {\n\t\tpadding   : 0,\n\t\tmargin    : 0,\n\t\tmaxHeight : '100vh',\n\t\tminHeight : '100vh',\n\t\toverflow  : 'hidden'\n\t},\n\n\tmycontainer : {\n\t\tpaddingLeft  : '15px',\n\t\tpaddingRight : '15px',\n\t\tmarginLeft   : '1vw',\n\t\tmarginRight  : '1vw',\n\t\theight       : '100vh',\n\n\t\toverflow     : 'hidden'\n\t},\n\n\tmySlider    : {\n\t\tflexGrow   : '2',\n\t\tmarginLeft : '10vw',\n\t\tmarginTop  : '1vh',\n\t\tposition   : 'absolute',\n\t\tfloat      : 'right'\n\t}\n}));\n\n//Changing width,height accordingly with the browser\nlet WINDOW_WIDTH = window.innerWidth;\nlet WINDOW_HEIGHT = window.innerHeight;\nlet NUMBER_OF_ARRAY_BARS = parseInt((WINDOW_WIDTH - 250) / 9);\n\nfunction reportWindowSize () {\n\tWINDOW_WIDTH = window.innerWidth;\n\tWINDOW_HEIGHT = window.innerHeight;\n\tNUMBER_OF_ARRAY_BARS = parseInt((WINDOW_WIDTH - 250) / 9);\n}\nwindow.onresize = reportWindowSize; //TBD -> find a way to update state also when resized\n\nconst PRIMARY_COLOR = '#557A95'; //Normal color of bars\nconst SECONDARY_COLOR = '#fe4a49'; //Color of bars when they are being compared\n//Animation Speed (how fast color changes, how fast height gets overwritten)\n\n//Tooltips for buttons\nconst DISABLED_BUTTON = 'Currently Disabled';\nconst ENABLED_BUTTON = { dummy: 'currently enabled' };\n\nconst SortingVisualizer = (props) => {\n\tconst classes = useStyles();\n\tconst [msg, setMsg] = useState('Welcome')\n\tconst [ ANIMATION_SPEED_MS, SET_ANIMATION_SPEED_MS ] = useState(10);\n\tconst [ buttonText, setButtonText ] = useState('RANDOMIZE ARRAY');\n\tconst [ reinitialize, setReinitialize ] = useState(false);\n\tconst [popup, setPopup] = useState(reinitialize);\n\tconst [ stopAllExec, setStopAllExec ] = useState(false);\n\tconst [ barArray, setBarArray ] = useState([]);\n\tconst [ sliderValue, setSliderValue ] = useState((NUMBER_OF_ARRAY_BARS / 4) >> 0); //(NUMBER_OF_ARRAY_BARS / 4) >> 0\n\tconst [ barWidth, setBarWidth ] = useState((0.8 * WINDOW_WIDTH / sliderValue) >> 0); // (WINDOW_WIDTH / sliderValue *500) >> 0\n\tconst [ isSorted, setIsSorted ] = useState(false);\n\n\tconst showNotification = (title, message, type, duration = 5000) => {\n\t\tstore.addNotification({\n\t\t\ttitle        : title,\n\t\t\tmessage      : message,\n\t\t\ttype         : type,\n\t\t\tinsert       : 'top',\n\t\t\tcontainer    : 'top-right',\n\t\t\tanimationIn  : [ 'animated', 'fadeIn' ],\n\t\t\tanimationOut : [ 'animated', 'fadeOut' ],\n\t\t\tdismiss      : {\n\t\t\t\tduration : duration,\n\t\t\t\tonScreen : true\n\t\t\t}\n\t\t});\n\t};\n\tfunction useWindowSize () {\n\t\tconst [ size, setSize ] = useState([ 0, 0 ]);\n\t\tuseLayoutEffect(() => {\n\t\t\tfunction updateSize () {\n\t\t\t\tsetSize([ window.innerWidth, window.innerHeight ]);\n\t\t\t}\n\t\t\twindow.addEventListener('resize', updateSize);\n\t\t\tupdateSize();\n\t\t\treturn () => window.removeEventListener('resize', updateSize);\n\t\t}, []);\n\t\treturn size;\n\t}\n\n\tconst size = useWindowSize();\n\n\tuseEffect(\n\t\t() => {\n\t\t\tconsole.log(ANIMATION_SPEED_MS);\n\t\t},\n\t\t[ ANIMATION_SPEED_MS ]\n\t);\n\n\tuseEffect(\n\t\t() => {\n\t\t\tresetArray();\n\t\t\tconsole.log(barArray, sliderValue);\n\t\t},\n\t\t[ sliderValue, size ]\n\t);\n\tuseEffect(\n\t\t() => {\n\t\t\tconsole.log(WINDOW_WIDTH, sliderValue);\n\t\t\tsetBarWidth((0.8 * WINDOW_WIDTH / sliderValue) >> 0); //(WINDOW_WIDTH / barArray.length) >> 0\n\t\t},\n\t\t[ barArray ]\n\t);\n\n\t//Generates new random array\n\tconst resetArray = () => {\n\t\tconst arr = [];\n\t\tfor (let i = 0; i < sliderValue; i++) {\n\t\t\tarr.push(randomIntFromInterval(50, WINDOW_HEIGHT - 650 / 2));\n\t\t}\n\t\tsetBarArray(arr);\n\t\tsetBarWidth((0.8 * WINDOW_WIDTH / sliderValue) >> 0);\n\t};\n\n\tconst disableSortButtons = () => {\n\t\treturn;\n\t};\n\tconst restoreStoreButtons = () => {\n\t\treturn;\n\t};\n\t//Sorting Algorithms\n\tconst mergeSort = () => {\n\t\tsetMsg('Sorting using Merge Sort');\n\t\tconst [ animations, sortArray ] = getMergeSortAnimations(barArray);\n\t\tfor (let i = 0; i < animations.length; i++) {\n\t\t\tconst isColorChange = i % 3 !== 2;\n\t\t\tconst arrayBars = document.getElementsByClassName('array-bar');\n\t\t\tif (isColorChange === true) {\n\t\t\t\tconst [ barOneIndex, barTwoIndex ] = animations[i];\n\t\t\t\tconst color = i % 3 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\n\t\t\t\tconst barOneStyle = arrayBars[barOneIndex].style;\n\t\t\t\tconst barTwoStyle = arrayBars[barTwoIndex].style;\n\t\t\t\t//If we don't multiply by the index then every animations[i] wait for exactly ANIMATION_SPEED_MS and immediately change into final state\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tbarOneStyle.backgroundColor = color;\n\t\t\t\t\tbarTwoStyle.backgroundColor = color;\n\t\t\t\t}, i * ANIMATION_SPEED_MS);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tconst [ barOneIdx, newHeight ] = animations[i];\n\t\t\t\t\tconst barOneStyle = arrayBars[barOneIdx].style;\n\t\t\t\t\tbarOneStyle.height = `${newHeight}px`;\n\t\t\t\t}, i * ANIMATION_SPEED_MS);\n\t\t\t}\n\t\t}\n\t\t// this.setState({array: sortArray})\n\t\tconst RESTORE_TIME = parseInt(ANIMATION_SPEED_MS * animations.length / 2 + 3000);\n\t\tsetTimeout(() => setMsg('Sorting Done'), RESTORE_TIME);\n\n\t\t\n\t};\n\tconst quickSort = () => {\n\n\t\tsetMsg('Sorting using Qucik Sort');\n\t\t\n\t\tconst [ animations, sortArray ] = getQuickSortAnimations(barArray);\n\t\tfor (let i; i < animations.length - 1; i++) {\n\n\t\t\t\n\n\t\t\tconst isColorChange = i % 6 === 0 || i % 6 === 1;\n\t\t\tconst arrayBars = document.getElementsByClassName('array-bar');\n\t\t\tif (isColorChange === true) {\n\t\t\t\tconst color = i % 6 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\n\t\t\t\tconst [ barOneIndex, barTwoIndex ] = animations[i];\n\t\t\t\tif (barOneIndex === -1) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tconst barOneStyle = arrayBars[barOneIndex].style;\n\t\t\t\tconst barTwoStyle = arrayBars[barTwoIndex].style;\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tbarOneStyle.backgroundColor = color;\n\t\t\t\t\tbarTwoStyle.backgroundColor = color;\n\t\t\t\t}, i * ANIMATION_SPEED_MS);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconst [ barIndex, newHeight ] = animations[i];\n\t\t\t\tif (barIndex === -1) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tconst barStyle = arrayBars[barIndex].style;\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tbarStyle.height = `${newHeight}px`;\n\t\t\t\t}, i * ANIMATION_SPEED_MS);\n\t\t\t}\n\t\t}\n\t\t// this.setState({array: sortArray})\n\t\tconst RESTORE_TIME = parseInt(ANIMATION_SPEED_MS * animations.length / 2 + 3000);\n\t\tconsole.log(RESTORE_TIME);\n\t\tsetTimeout(() => setMsg('Done...'), RESTORE_TIME);\n\n\t};\n\n\tconst bubbleSort = () => {\n\t\tsetMsg('Sorting using Bubble Sort');\n\t\tconst [ animations, sortArray ] = getBubbleSortAnimations(barArray);\n\t\tfor (let i = 0; i < animations.length; i++) {\n\t\t\tconsole.log('...................>>>>>>>>...........', ANIMATION_SPEED_MS);\n\n\t\t\tconst isColorChange = i % 4 === 0 || i % 4 === 1;\n\t\t\tconst arrayBars = document.getElementsByClassName('array-bar');\n\t\t\tif (isColorChange === true) {\n\t\t\t\tconst color = i % 4 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\n\t\t\t\tconst [ barOneIndex, barTwoIndex ] = animations[i];\n\t\t\t\tconst barOneStyle = arrayBars[barOneIndex].style;\n\t\t\t\tconst barTwoStyle = arrayBars[barTwoIndex].style;\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tbarOneStyle.backgroundColor = color;\n\t\t\t\t\tbarTwoStyle.backgroundColor = color;\n\t\t\t\t}, i * ANIMATION_SPEED_MS);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconst [ barIndex, newHeight ] = animations[i];\n\t\t\t\tif (barIndex === -1) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tconst barStyle = arrayBars[barIndex].style;\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tbarStyle.height = `${newHeight}px`;\n\t\t\t\t}, i * ANIMATION_SPEED_MS);\n\t\t\t}\n\t\t}\n\t\t// this.setState({array: sortArray})\n\t\tconst RESTORE_TIME = parseInt(ANIMATION_SPEED_MS * animations.length / 2 + 3000);\n\t\tsetTimeout(() => restoreStoreButtons(), RESTORE_TIME);\n\t};\n\n\tconst insertionSort = () => {\n\t\tsetMsg('Sorting using Insertion Sort');\n\t\tconst [ animations, sortArray ] = getInsertionSortAnimations(barArray);\n\t\tfor (let i = 0; i < animations.length; i++) {\n\t\t\tconst isColorChange = animations[i][0] === 'comparision1' || animations[i][0] === 'comparision2';\n\t\t\tconst arrayBars = document.getElementsByClassName('array-bar');\n\t\t\tif (isColorChange === true) {\n\t\t\t\tconst color = animations[i][0] === 'comparision1' ? SECONDARY_COLOR : PRIMARY_COLOR;\n\t\t\t\tconst [ temp, barOneIndex, barTwoIndex ] = animations[i];\n\t\t\t\tconst barOneStyle = arrayBars[barOneIndex].style;\n\t\t\t\tconst barTwoStyle = arrayBars[barTwoIndex].style;\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tbarOneStyle.backgroundColor = color;\n\t\t\t\t\tbarTwoStyle.backgroundColor = color;\n\t\t\t\t}, i * ANIMATION_SPEED_MS);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconst [ temp, barIndex, newHeight ] = animations[i];\n\t\t\t\tconst barStyle = arrayBars[barIndex].style;\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tbarStyle.height = `${newHeight}px`;\n\t\t\t\t}, i * ANIMATION_SPEED_MS);\n\t\t\t}\n\t\t}\n\t\t// this.setState({array: sortArray})\n\t\tconst RESTORE_TIME = parseInt(ANIMATION_SPEED_MS * animations.length / 2 + 3000);\n\t\tsetTimeout(() => restoreStoreButtons(), RESTORE_TIME);\n\t};\n\n\tconst selectionSort = () => {\n\n\t\tsetMsg('Sorting using Selection Sort');\n\t\tconst [ animations, sortArray ] = getSelectionSortAnimations(barArray);\n\t\tfor (let i = 0; i < animations.length; i++) {\n\t\t\tconst isColorChange = animations[i][0] === 'comparision1' || animations[i][0] === 'comparision2';\n\t\t\tconst arrayBars = document.getElementsByClassName('array-bar');\n\t\t\tif (isColorChange === true) {\n\t\t\t\tconst color = animations[i][0] === 'comparision1' ? SECONDARY_COLOR : PRIMARY_COLOR;\n\t\t\t\tconst [ temp, barOneIndex, barTwoIndex ] = animations[i];\n\t\t\t\tconst barOneStyle = arrayBars[barOneIndex].style;\n\t\t\t\tconst barTwoStyle = arrayBars[barTwoIndex].style;\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tbarOneStyle.backgroundColor = color;\n\t\t\t\t\tbarTwoStyle.backgroundColor = color;\n\t\t\t\t}, i * ANIMATION_SPEED_MS);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconst [ temp, barIndex, newHeight ] = animations[i];\n\t\t\t\tconst barStyle = arrayBars[barIndex].style;\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tbarStyle.height = `${newHeight}px`;\n\t\t\t\t}, i * ANIMATION_SPEED_MS);\n\t\t\t}\n\t\t}\n\t\t// this.setState({array: sortArray})\n\t\tconst RESTORE_TIME = parseInt(ANIMATION_SPEED_MS * animations.length / 2 + 3000);\n\t\tsetTimeout(() => restoreStoreButtons(), RESTORE_TIME);\n\t};\n\n\tconst heapSort = () => {\n\t\treturn console.log('Not Implemented!');\n\t};\n\tconst array = barArray;\n\tconst SORT_BUTTONS = 6;\n\tconst TOTAL_BUTTONS = 1 + SORT_BUTTONS;\n\n\tconst reinitializeEverything = () => {\n\t\treinitialize ? window.location.reload(): resetArray();\n\t};\n\n\tuseEffect(\n\t\t() => {\n\t\t\tsetButtonText(() => (reinitialize ? '  REINITIALIZE  ' : 'RANDOMIZE ARRAY'));\n\t\t},\n\t\t[ reinitialize ]\n\t);\n\n\tuseEffect(\n\t\t() => {\n\t\t\treinitializeEverything();\n\t\t},\n\t\t[ isSorted ]\n\t);\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<Fade in={true} timeout={'1500'}>\n\t\t\t\t<Container\n\t\t\t\t\tclassName={classes.container}\n\t\t\t\t\tmaxWidth=\"xs\"\n\t\t\t\t\tmaxWidth=\"xl\"\n\t\t\t\t\tstyle={{ backgroundColor: '#cfe8fc'}}\n\t\t\t\t>\n\t\t\t\t\t<ButtonAppBar\n\t\t\t\t\t\tSET_ANIMATION_SPEED_MS={SET_ANIMATION_SPEED_MS}\n\t\t\t\t\t\treinitializeEverything={reinitializeEverything}\n\t\t\t\t\t\tnotify={showNotification}\n\t\t\t\t\t\tsetReinitialize={setReinitialize}\n\t\t\t\t\t\tbubbleSort={bubbleSort}\n\t\t\t\t\t\tselectionSort={selectionSort}\n\t\t\t\t\t\tInsertionSort={insertionSort}\n\t\t\t\t\t\tmergeSort={mergeSort}\n\t\t\t\t\t\tquickSort={quickSort}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<Container\n\t\t\t\t\t\tclassName={classes.mycontainer}\n\t\t\t\t\t\tmaxWidth=\"xs\"\n\t\t\t\t\t\tmaxWidth=\"l\"\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tposition        : 'relative',\n\t\t\t\t\t\t\tbackgroundColor : '#96ceb4', //#00B4AB\n\t\t\t\t\t\t\tmaxWidth        : '98vw',\n\t\t\t\t\t\t\tmaxHeight       : '85vh'\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\n\n\t\t\t\t\t\t{array.map((value, idx) => (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclassName=\"array-bar\"\n\t\t\t\t\t\t\t\tkey={idx}\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tposition        : 'relative',\n\t\t\t\t\t\t\t\t\tbackgroundColor : PRIMARY_COLOR,\n\t\t\t\t\t\t\t\t\theight          : `${value}px`,\n\t\t\t\t\t\t\t\t\twidth           : `${barWidth}px`\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</Container>\n\n\t\t\t\t\t\n\n\t\t\t\t\t<div style={{ width: '100%'}}>\n\t\t\t\t\t\t<Box display=\"flex\" p={1} alignContent=\"center\" marginBottom= '10px'>\n\t\t\t\t\t\t\t<Box p={1} flexGrow={1}>\n\t\t\t\t\t\t\t\t<Container>\n\t\t\t\t\t\t\t\t\t<InputSlider\n\t\t\t\t\t\t\t\t\t\tsliderValue={sliderValue}\n\t\t\t\t\t\t\t\t\t\tmin={10}\n\t\t\t\t\t\t\t\t\t\tmaxValue={NUMBER_OF_ARRAY_BARS}\n\t\t\t\t\t\t\t\t\t\tsetSliderValue={setSliderValue}\n\t\t\t\t\t\t\t\t\t\tisSliderDisabled={reinitialize}\n\t\t\t\t\t\t\t\t\t\tonChange={setSliderValue}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Typography id=\"range-slider\" variant=\"h7\" color='inherit'>\n\t\t\t\t\t\t\t\t\t\tSelect Array Size\n\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t</Container>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t<Box p={1} flexGrow={1}>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\tcolor={!reinitialize ? 'primary' : 'secondary'}\n\t\t\t\t\t\t\t\t\tonClick={reinitializeEverything}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{buttonText}\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t<Box p={1}>\n\t\t\t\t\t\t\t\t<Container>\n\t\t\t\t\t\t\t\t\t<InputSlider\n\t\t\t\t\t\t\t\t\t\tsliderValue={ANIMATION_SPEED_MS}\n\t\t\t\t\t\t\t\t\t\tstep={0.5}\n\t\t\t\t\t\t\t\t\t\tmin={0.01}\n\t\t\t\t\t\t\t\t\t\tmaxValue={200}\n\t\t\t\t\t\t\t\t\t\tsetSliderValue={SET_ANIMATION_SPEED_MS}\n\t\t\t\t\t\t\t\t\t\tisSliderDisabled={reinitialize}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Typography id=\"range-slider\" variant=\"h7\" gutterBottom color='inherit'>\n\t\t\t\t\t\t\t\t\t\tSet Animation Delay (MS)\n\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t</Container>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<SimpleSnackbar msg={msg} stateVal={!reinitialize}/>\n\t\t\t\t</Container>\n\t\t\t</Fade>\n\t\t</Fragment>\n\t);\n};\n\nconst randomIntFromInterval = (min, max) => Math.floor(Math.random() * (max - min + 1) + min);\n\nexport default SortingVisualizer;\n","export function getInsertionSortAnimations(array) {\n    let animations  = [];\n    let auxillaryArray = array.slice();\n    insertionSort(auxillaryArray, animations);\n    const javaScriptSortedArray = array.slice().sort((a, b) => a - b);\n    console.log(\"sort works correctly? \",arraysAreEqual(javaScriptSortedArray, auxillaryArray));\n    array = auxillaryArray;\n    return [animations, array];\n}\n\nfunction insertionSort(auxillaryArray, animations) {\n    const N = auxillaryArray.length;\n    for (let i = 1; i < N; i++) {\n        let key = auxillaryArray[i];\n        let j = i - 1;\n        animations.push([\"comparision1\", j, i]);\n        animations.push([\"comparision2\", j, i]);\n        while(j >= 0 && auxillaryArray[j] > key) {\n            animations.push([\"overwrite\", j + 1, auxillaryArray[j]]);\n            auxillaryArray[j + 1] = auxillaryArray[j];\n            j = j - 1;\n            if(j >= 0) {\n                animations.push([\"comparision1\", j, i]);\n                animations.push([\"comparision2\", j, i]);\n            }     \n        }\n        animations.push([\"overwrite\", j + 1, key]);\n        auxillaryArray[j + 1] = key;\n    }\n}\n\nfunction arraysAreEqual(firstArray, secondArray) {\n    if (firstArray.length !== secondArray.length) {\n        return false;\n    }\n    for (let i = 0; i < firstArray.length; i++) {\n      if (firstArray[i] !== secondArray[i]) {\n        return false;\n      }\n    }\n    return true;\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport { Container } from '@material-ui/core';\n\nfunction CircularProgressWithLabel (props) {\n\treturn (\n\t\t<Box position=\"absolute\" display=\"inline-flex\">\n\t\t\t<CircularProgress variant=\"static\" {...props} />\n\t\t\t<Box\n\t\t\t\ttop={0}\n\t\t\t\tleft={0}\n\t\t\t\tbottom={0}\n\t\t\t\tright={0}\n\t\t\t\tposition=\"absolute\"\n\t\t\t\tdisplay=\"flex\"\n\t\t\t\talignItems=\"center\"\n\t\t\t\tjustifyContent=\"center\"\n\t\t\t>\n\t\t\t\t<Typography variant=\"h3\" component=\"div\" color=\"textSecondary\">{`${Math.round(\n\t\t\t\t\tprops.value\n\t\t\t\t)}%`}</Typography>\n\t\t\t</Box>\n\t\t</Box>\n\t);\n}\n\nexport default function CircularStatic (props) {\n\tconst [ progress, setProgress ] = React.useState(props.initial);\n\n\tReact.useEffect(() => {\n\t\tconst timer = setInterval(() => {\n\t\t\tsetProgress(\n\t\t\t\t(prevProgress) =>\n\t\t\t\t\tprevProgress >= 95 ? props.setLoader(100) : prevProgress + Math.floor(Math.random() * 10)\n\t\t\t);\n\t\t}, 100);\n\t\treturn () => {\n\t\t\tclearInterval(timer);\n\t\t};\n\t}, []);\n\n\treturn (\n\t\t<Container>\n\t\t\t<Grid\n\t\t\t\tcontainer\n\t\t\t\tspacing={0}\n\t\t\t\tdirection=\"column\"\n\t\t\t\talignItems=\"center\"\n\t\t\t\tjustify=\"center\"\n\t\t\t\tstyle={{ minHeight: '100vh' }}\n\t\t\t>\n\t\t\t\t>\n\t\t\t\t<CircularProgressWithLabel size={props.size} setLoader={props.setLoader} value={progress} />\n\t\t\t</Grid>\n\t\t</Container>\n\t);\n}\n","import React, { useState } from 'react';\nimport SortingVisualizer from './SortingVisualizer/SortingVisualizer';\nimport CircularProgressWithLabel from './components/Loader';\nimport './App.css';\nimport Variants from './components/Skeleton';\n\nconst App = () => {\n\tconst [ loader, setLoader ] = useState(Math.floor(Math.random()) * 20);\n\tconsole.log(loader);\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<div className=\"app-container\">\n\t\t\t\t{loader < 100 ? (\n\t\t\t\t\t<CircularProgressWithLabel\n\t\t\t\t\t\tsize={'13rem'}\n\t\t\t\t\t\tsetLoader={setLoader}\n\t\t\t\t\t\tprogress={loader}\n\t\t\t\t\t\tinitial={loader}\n\t\t\t\t\t/>\n\t\t\t\t) : (\n\t\t\t\t\t<SortingVisualizer />\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}